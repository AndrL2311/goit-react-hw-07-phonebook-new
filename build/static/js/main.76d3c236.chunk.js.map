{"version":3,"sources":["components/Contact/Contact.module.css","App.module.css","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","redux/contacts/contacts-operations.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/Contacts/Contacts.jsx","App.jsx","index.js","components/Form/Form.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","itemsReducer","createReducer","_","payload","state","filter","contact","id","filterReduser","loading","counterReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","contactsReducer","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","get","then","data","catch","error","addContact","item","name","number","post","deleteContact","contactId","delete","connect","onSubmit","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","reset","className","s","formBox","event","preventDefault","label","htmlFor","input","type","value","onChange","currentTarget","pattern","title","required","button","Contact","onDeleteContact","onClick","getVisibleContacts","allContact","normalizedFilter","toLowerCase","includes","isLoadingContacts","getContacts","dataId","useEffect","list","map","App","container","titlePhonebook","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d3c236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1d_kg\",\"button\":\"Contact_button__1wUL0\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"titlePhonebook\":\"App_titlePhonebook__2kfSQ\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__tcvns\"};","import { createAction } from '@reduxjs/toolkit';\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const deleteContact = createAction('contacts/Delete');\nexport const filterContact = createAction('contacts/Filter');\n\n// const action = {\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   deleteContact,\n//   filterContact,\n// };\n\n// export default action;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from \"./contacts-actions\";\n\nconst itemsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\n// if (state.find(contact => contact.name === payload.name)) {\n//   return alert(`${payload.name} is alredy in contacts`);\n// } else {\n//   return [...state, payload];\n// }\n\nconst filterReduser = createReducer(\"\", {\n  [filterContact]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst counterReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReduser,\n  loading,\n});\n\nexport default counterReducer;\n","import contactsReducer from './contacts/contacts-reduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// import storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\naxios.defaults.baseURL = 'https://618d6851fe09aa001744073a.mockapi.io/';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContact = contact => dispatch => {\n  const item = { name: contact.name, number: contact.number };\n\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', item)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n// deleteContactSuccess,\n// deleteContactError,\n\nconst contactsOperations = { fetchContacts, addContact, deleteContact };\n\nexport default contactsOperations;\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChangeName = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const data = { name, number };\n    onSubmit(data);\n    // Сбрасываем имя и номер\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.formBox} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={numberInputId}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: data => dispatch(contactsOperations.addContact(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Form);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name{' '}\n      <input\n        type=\"text\"\n        className={s.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispachToProps = dispatch => ({\n  onChange: event => dispatch(filterContact(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction Contact({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.item}>\n      <span className={s.name}>{name}</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport Contact from '../Contact/Contact';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nfunction Contacts({ contacts, onDeleteContact, getContacts, isLoadingContacts }) {\n  useEffect(() => {\n    getContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ul className={s.list}>\n      {isLoadingContacts && <h1>Downloads...</h1>}\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nconst getVisibleContacts = (allContact, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContact.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\n  contacts: getVisibleContacts(items, filter),\n  isLoadingContacts: loading,\n});\n\nconst mapDispachToProps = dispatch => ({\n  getContacts: () => dispatch(contactsOperations.fetchContacts()),\n  onDeleteContact: dataId => dispatch(contactsOperations.deleteContact(dataId)),\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","// import { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.titlePhonebook}>Phonebook</h1>\n      <Form />\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import reportWebVitals from './reportWebVitals';\n// ============================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"Form_formBox__t4FbK\",\"button\":\"Form_button__243jh\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\"};"],"sourceRoot":""}