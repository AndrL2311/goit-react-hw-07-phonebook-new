{"version":3,"sources":["components/Contact/Contact.module.css","App.module.css","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/Contacts/Contacts.jsx","App.jsx","index.js","components/Form/Form.module.css"],"names":["module","exports","filterContact","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","contact","item","name","number","post","deleteContact","contactId","delete","contactsOperations","itemsReducer","createReducer","fulfilled","_","payload","state","filter","id","filterReduser","loading","pending","rejected","counterReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","contactsReducer","connect","dispatch","onSubmit","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","reset","className","s","formBox","event","preventDefault","find","alert","label","htmlFor","input","type","value","onChange","currentTarget","pattern","title","required","button","Contact","onDeleteContact","onClick","getVisibleContacts","allContact","normalizedFilter","toLowerCase","includes","isLoadingContacts","getContacts","dataId","useEffect","list","map","App","container","titlePhonebook","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.872711f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1d_kg\",\"button\":\"Contact_button__1wUL0\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"titlePhonebook\":\"App_titlePhonebook__2kfSQ\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__tcvns\"};","import { createAction } from \"@reduxjs/toolkit\";\n// export const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\n// export const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\n// export const fetchContactError = createAction(\"contacts/fetchContactError\");\n\n// export const addContactRequest = createAction(\"contacts/addContactRequest\");\n// export const addContactSuccess = createAction(\"contacts/addContactSuccess\");\n// export const addContactError = createAction(\"contacts/addContactError\");\n\n// export const deleteContactRequest = createAction(\n//   \"contacts/deleteContactRequest\"\n// );\n// export const deleteContactSuccess = createAction(\n//   \"contacts/deleteContactSuccess\"\n// );\n// export const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const filterContact = createAction(\"contacts/Filter\");\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// axios.defaults.baseURL = 'http://localhost:4040';\naxios.defaults.baseURL = \"https://618d6851fe09aa001744073a.mockapi.io/\";\n\n// const fetchContacts = () => (dispatch) => {\n//   dispatch(fetchContactRequest());\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//     .catch((error) => dispatch(fetchContactError(error)));\n// };\n\n// fetchContacts через асинхронную функцию\n// const fetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactRequest());\n\n//   try {\n//     const { data } = await axios.get(\"/contacts\");\n//     dispatch(fetchContactSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactError(error));\n//   }\n// };\n\nconst fetchContacts = createAsyncThunk(\"contacts/fetchContact\", async () => {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n});\n\n// const addContact = (contact) => (dispatch) => {\n//   const item = { name: contact.name, number: contact.number };\n\n//   dispatch(addContactRequest());\n//   axios\n//     .post(\"/contacts\", item)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch((error) => dispatch(addContactError(error)));\n// };\n\n// addContact через асинхронную функцию\n// const addContact = (contact) => async (dispatch) => {\n//   const item = { name: contact.name, number: contact.number };\n\n//   dispatch(addContactRequest());\n\n//   try {\n//     const { data } = await axios.post(\"/contacts\", item);\n//     dispatch(addContactSuccess(data));\n//   } catch (error) {\n//     dispatch(addContactError(error));\n//   }\n// };\n\nconst addContact = createAsyncThunk(\"contacts/addContact\", async (contact) => {\n  const item = { name: contact.name, number: contact.number };\n  const { data } = await axios.post(\"/contacts\", item);\n  return data;\n});\n\n// const deleteContact = (contactId) => (dispatch) => {\n//   dispatch(deleteContactRequest());\n//   axios\n//     .delete(`/contacts/${contactId}`)\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\n//     .catch((error) => dispatch(deleteContactError(error)));\n// };\n\n// deleteContact через асинхронную функцию\n// const deleteContact = (contactId) => async (dispatch) => {\n//   dispatch(deleteContactRequest());\n\n//   try {\n//     await axios.delete(`/contacts/${contactId}`);\n//     dispatch(deleteContactSuccess(contactId));\n//   } catch (error) {\n//     dispatch(deleteContactError(error));\n//   }\n// };\n\nconst deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactId) => {\n    await axios.delete(`/contacts/${contactId}`);\n    return contactId;\n  }\n);\n\nconst contactsOperations = { fetchContacts, addContact, deleteContact };\n\nexport default contactsOperations;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { filterContact } from \"./contacts-actions\";\n\nimport contactsOperations from \"./contacts-operations\";\n\nconst { fetchContacts, addContact, deleteContact } = contactsOperations;\n\nconst itemsReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filterReduser = createReducer(\"\", {\n  [filterContact]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst counterReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReduser,\n  loading,\n});\n\nexport default counterReducer;\n","import contactsReducer from './contacts/contacts-reduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// import storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nimport s from './Form.module.css';\n\n\n\nfunction Form({ onSubmit, contacts }) {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChangeName = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = { name, number };\n\n    // Проверка есть ли такое имя в базе\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is alredy in contacts`);\n      // Сбрасываем имя и номер\n      reset();\n    } else {\n      onSubmit(data);\n        // Сбрасываем имя и номер\n      reset();\n    } \n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.formBox} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={numberInputId}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts.items,\n  });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: data => dispatch(contactsOperations.addContact(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name{' '}\n      <input\n        type=\"text\"\n        className={s.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispachToProps = dispatch => ({\n  onChange: event => dispatch(filterContact(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction Contact({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.item}>\n      <span className={s.name}>{name}</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport Contact from '../Contact/Contact';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nfunction Contacts({ contacts, onDeleteContact, getContacts, isLoadingContacts }) {\n  \n  useEffect(() => {\n    getContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ul className={s.list}>\n      {isLoadingContacts && <h1>Downloads...</h1>}\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nconst getVisibleContacts = (allContact, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContact.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\n  contacts: getVisibleContacts(items, filter),\n  isLoadingContacts: loading,\n});\n\nconst mapDispachToProps = dispatch => ({\n  getContacts: () => dispatch(contactsOperations.fetchContacts()),\n  onDeleteContact: dataId => dispatch(contactsOperations.deleteContact(dataId)),\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","// import { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.titlePhonebook}>Phonebook</h1>\n      <Form />\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import reportWebVitals from './reportWebVitals';\n// ============================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"Form_formBox__t4FbK\",\"button\":\"Form_button__243jh\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\"};"],"sourceRoot":""}